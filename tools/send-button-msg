#!/bin/bash

BASE_PATH=${BASE_PATH:-$(cd $(dirname $0)/.. ; pwd -P)}

. "$HOME/.mupel/mupel.conf";
. "$BASE_PATH/tools/tool_functions";

TEMP_DIR=$BASE_PATH/build/.tmp;
mkdir -p $TEMP_DIR;

echo - $pid_thread2 -- $1 - $2 -- $3 - $4 -- > /dev/stderr

field=$1
value1=$2
value2=$3
value3=$4

case $field in
  openPullRequestListDialog)
    requests=$(git -C "$value1" pulls list | tail -n +2);
    IFS=$'\n'

    for r in $requests; do
    {
      echo $r | awk -F ' ' '{print $1}'
      echo $r | awk -F ' ' '{print $2}' | awk -F ' ' '{print $1}'
      echo $r | cut -b 12-47
      echo $r | cut -b 48-
    } done |
    showdialog --width=640 --height=480 --title="Open Pull requests" --image="gtk-execute" \
               --text="Double click or press enter on <b>Pull request</b> to show related sub menu" \
               --list --print-column=1 \
               --dclick-action="@$BASE_PATH/tools/send-button-msg showDetailedRequestInfo $value1 $1" \
               --column="Number" --column="Date" --column="Name" --column="Source" \
               --button=gtk-close:0 > /dev/null 2>&1
    ;;
  openPullRequestInfoDialog)
    IFS=$' '
    requestId=$(echo $value4 | awk -F '|' '{print $1}');

    showdialog --form --title="Git Pull requests work" \
               --window-icon="$BASE_PATH/icons/icon-mupel-128x128.png" \
               --image="$BASE_PATH/icons/icon-kodi-mbe.png" \
               --field="<i><span size=\"large\">Command selection</span></i>:LBL" "" \
               --field=":LBL" "" \
               --field="Handle pull requests commands::LBL" "" \
               --field="Show detailed info:FBTN" "$BASE_PATH/tools/send-button-msg showDetailedRequestInfo $requestId $value2" \
               --field="Open request on browser:FBTN" "$BASE_PATH/tools/send-button-msg openRequestOnBrowser $requestId $value2" \
               --button=gtk-close:0 > /dev/null 2>&1
    ;;
  showDetailedRequestInfo)
    requestId=$(echo $value3 | awk -F '|' '{print $1}');
    git -C "$value1" pulls show $requestId --comments  |
      sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g" |
      showdialog --text-info \
                 --width=640 --height=480 \
                 --wrap --show-uri \
                 --title="Pull Request #$requestId" \
                 --button="Show code changes:$BASE_PATH/tools/send-button-msg showRequestChanges $value1 $requestId" \
                 --button="Open website:git -C $value1 pulls browse $requestId" \
                 --button=gtk-close:0 > /dev/null 2>&1
    ;;
  showRequestChanges)
    IFS=$' '
    git -C "$value1" pulls show $value2 --full | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g" > $TEMP_DIR/pull_request.patch;

    cat $TEMP_DIR/pull_request.patch |
      showdialog --text-info \
                 --width=640 --height=480 \
                 --show-uri \
                 --title="Pull Request #$value2 (code changes)" \
                 --button="Save patch:$BASE_PATH/tools/send-button-msg saveRequestPatch $value1 $value2" \
                 --button="Open website:git -C $value1 pulls browse $value2" \
                 --button=gtk-close:0 > /dev/null 2>&1
    ;;
  saveRequestPatch)
    ret=$(showdialog --title="Save pull request patch" \
               --text="<b>\
    Select folder where you want to store the patch version of Pull Request #$value2
    </b>" \
               --file --save \
               --directory \
               --filename=`echo $(echo $value1 | awk -F 'build/' '{print $2}' | awk -F '/' '{print $1}')-pull-request-$value2.diff` \
               --width=640 --height=480);
    [ $? = 0 ] && cp -f $TEMP_DIR/pull_request.patch $ret;
    ;;
  openRequestOnBrowser)
    git -C "$value2" pulls browse $value1
    ;;
esac
