#!/bin/bash -e
###############################################################################
#                                                                             #
#     Copyright (C) 2015 Team KODI                                            #
#     http://kodi.tv                                                          #
#                                                                             #
#  This program is free software: you can redistribute it and/or modify       #
#  it under the terms of the GNU General Public License as published by       #
#  the Free Software Foundation, either version 3 of the License, or          #
#  (at your option) any later version.                                        #
#                                                                             #
#  This program is distributed in the hope that it will be useful,            #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of             #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              #
#  GNU General Public License for more details.                               #
#                                                                             #
#  You should have received a copy of the GNU General Public License          #
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.      #
#                                                                             #
###############################################################################

BASE_PATH=${BASE_PATH:-$(cd $(dirname $0)/.. ; pwd -P)}

. "${HOME}/.mupel/mupel.conf";
. "${BASE_PATH}/tools/tool_functions";

DEBUG_BUILD="--enable-debug=no"
BUILD_SYSTEM="android-x86_32"
TEMP_DIR=
INSTALL_DIR_TYPE="Release"

##
# Usage help function return as string the available values
function usage()
{
  echo "Usage: $0 [--options]"
  echo "Options:"
  echo "--debug           build debug version"
  echo "--addon <name>    start a build of given add-on directly, usable during"
  echo "                  programming time"
  echo "--build-direct    if inserted kodi becomes direct build without perform of pre"
  echo "                  steps, becomes possible after one time the complete build"
  echo "                  was done. Usable during programming to reduce time"
  echo "--temp-dir <dir>  the temporary directory to store parts, if not set becomes"
  echo "                  newcreated. This value is used from 'mupel' to have same dir."
  echo "--help            this help message"
  echo "Note:"
  echo "  This scripts are normally called from GUI interface, but also possible to use"
  echo "  direct with the right options set."
  exit 1
}
##

##
# Function to process given input variables
function process_opts()
{
  while test "$1" != "" ; do
    case "$1" in
      --build-direct)
        DIRECT_KODI_BUILD=1
        ;;
      --debug)
        DEBUG_BUILD="--enable-debug=yes"
        INSTALL_DIR_TYPE="Debug"
        ;;
      --addon)
        case "$2" in
            "")
              echo "Option '--addon', no argument"
              shift
              ;;
            *)
              ADDON_BUILD="$2"
              shift
              ;;
        esac ;;
      --temp-dir)
        case "$2" in
            "")
              echo "Option '--temp-dir', no argument"
              shift
              ;;
            *)
              TEMP_DIR="$2"
              shift
              ;;
        esac ;;
      --help)
        usage
        ;;
      *)
        echo "invalid command-line option: $OPTARG"
        usage
        ;;
    esac
    shift
  done
}
##

###############################################################################
# Start of main process

process_opts "$@";

initBuildScript_Kodi;

set -e;
trap '[[ ! -z $OWN_TEMP ]] && [[ ! -z $TEMP_DIR ]] && rm -rf $TEMP_DIR; trapError ${LINENO};' ERR;

touch $TEMP_DIR/kodi-android-x86.failed;

. "$HOME/.mupel/android.conf"
. "$BASE_PATH/versions"

# Load or update kodi
loadKodiBuildDir $BUILD_SYSTEM "Android x86 32bit";

ANDROID_SDK_DEFAULT_VERSION=$(cat ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/defaultenv | awk '/^  android)$/{i=1;next} i && i++ <= 2' | grep "DEFAULT_SDK_VERSION" | awk -F '="' '{print $2}' | awk -F '"' '{print $1}')
ANDROID_NDK_DEFAULT_VERSION=$(cat ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/defaultenv | awk '/^  android)$/{i=1;next} i && i++ <= 2' | grep "DEFAULT_NDK_VERSION" | awk -F '="' '{print $2}' | awk -F '"' '{print $1}')
ANDROID_SEL_TARGET_VERSION=$(echo $ANDROID_SEL_TARGET | awk -F '-' '{print $2}');

if [[ $ANDROID_SEL_TARGET_VERSION = $ANDROID_SDK_DEFAULT_VERSION ]];then
{
  export SDK_VERSION=$ANDROID_SDK_DEFAULT_VERSION
  export NDK_VERSION=$ANDROID_NDK_DEFAULT_VERSION
}
else
{
  export SDK_VERSION=$ANDROID_SEL_TARGET_VERSION
  export NDK_VERSION=$ANDROID_NDK_ADDITIONAL_VERSION
} fi
export Configuration=$INSTALL_DIR_TYPE
export TARBALLS=$BASE_PATH/build/kodi-tarballs
export BUILDTHREADS=$CPU_PROC_JOBS
export XBMC_PLATFORM_DIR=android
export WORKSPACE=$BASE_PATH/build/kodi-$GIT_USER/kodi-$BUILD_SYSTEM
export XBMC_DEPENDS_ROOT=$BASE_PATH/build/kodi-$GIT_USER/binary_distrib/$INSTALL_DIR_TYPE/kodi;
export NDK_ARCH=x86
export ANDROID_DEV_ROOT=$ANDROID_DEV_ROOT
export CURRENT_NDK_PATH=$ANDROID_DEV_ROOT/android-ndk-r$NDK_VERSION
export NDK_PATH=$CURRENT_NDK_PATH
export SDK_PATH=$SDK_PATH
export CURRENT_TOOLCHAIN=$ANDROID_DEV_ROOT/android-toolchain-$NDK_ARCH-$SDK_VERSION-r$NDK_VERSION
export TOOLCHAIN=$CURRENT_TOOLCHAIN
export TOOLCHAIN_X86=$CURRENT_TOOLCHAIN

if [ ! -z $ADDON_BUILD ];then
  KODI_BUILD="$ADDON_BUILD add-on only";
elif [ -z $DIRECT_KODI_BUILD ];then
  KODI_BUILD="complete";
else
  KODI_BUILD="direct";fi

printf "
/------------------------------------------------------------------------------
|
|  Kodi build Android x86 32bit
| ==============================
|
|  Build type :        $KODI_BUILD
|  Build add-ons :     $([[ $INCLUDE_KODI_ADDONS = "TRUE" ]] && echo "yes" || echo "no")
|  Test run :          $([[ $KODI_RUN_TESTS = "TRUE" ]] && echo "yes" || echo "no")
|  Configuration :     $Configuration
|
|  TARBALLS :          $TARBALLS
|  BUILDTHREADS :      $BUILDTHREADS
|  XBMC_PLATFORM_DIR : $XBMC_PLATFORM_DIR
|  WORKSPACE :         $WORKSPACE
|
|  NDK_ARCH :          $NDK_ARCH
|  SDK_VERSION :       $SDK_VERSION
|  NDK_VERSION :       $NDK_VERSION
|  XBMC_DEPENDS_ROOT : $XBMC_DEPENDS_ROOT
|  NDK_ARCH :          $NDK_ARCH
|  ANDROID_DEV_ROOT :  $ANDROID_DEV_ROOT
|  NDK_PATH :          $NDK_PATH
|  SDK_PATH :          $SDK_PATH
|  TOOLCHAIN :         $TOOLCHAIN
|
\\-------------------------------------------------------------------------------
"

sleep 3

# Change to source code path
cd ${BASE_PATH}/build/kodi-$GIT_USER/kodi-${BUILD_SYSTEM}

if [ -z $ADDON_BUILD ];then
{
  if [ -z $DIRECT_KODI_BUILD ];then
  {
    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}prepare-depends${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
    sleep 2
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/prepare-depends
    printf $CURS_UP
    log_success_msg

    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}configure-depends${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
    sleep 2
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/configure-depends
    printf $CURS_UP
    log_success_msg

    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}make-depends${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
    sleep 2
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/make-depends
    printf $CURS_UP
    log_success_msg

    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}prepare-xbmc${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
    sleep 2
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/prepare-xbmc
    printf $CURS_UP
    log_success_msg
  }
  else
    printf "\nRunning ${BRIGHT}${WHITE}Direct Kodi build started${NORMAL}\n";fi

  if [ "$KODI_RUN_TESTS" = "true" ];then
    CONFIG_EXTRA="$CONFIG_EXTRA --enable-gtest";fi
  export CONFIG_EXTRA

  if [ -z $DIRECT_KODI_BUILD ] || [[ $KODI_CONF_IN_DIRECT_BUILD = "TRUE" ]];then
  {
    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}configure-xbmc${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
    sleep 2
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/configure-xbmc
    printf $CURS_UP
    log_success_msg
  } fi

  printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}make-xbmc${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'\n"
  sleep 2
  bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/make-xbmc
  make apk;
  if [ -z $DIRECT_KODI_BUILD ];then
    make install;fi
  log_success_msg

  if [ -z $DIRECT_KODI_BUILD ];then
  {
    printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}make-binary-addons${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'"
    sleep 2
    if [[ $INCLUDE_KODI_ADDONS != FALSE ]];then
    {
      printf "\n"
      bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/make-binary-addons
      printf $CURS_UP
      log_success_msg
    }
    else
      log_skip_msg;fi
  } fi

  printf "\nRunning ${BRIGHT}${WHITE}${UNDERLINE}tests${NORMAL} on '${BRIGHT}${GREEN}${BUILD_SYSTEM}${NORMAL}'"
  sleep 2
  if [[ $KODI_RUN_TESTS != FALSE ]];then
  {
    printf "\n"
    bash ${BASE_PATH}/build/kodi-$GIT_USER/kodi-android-x86_32/tools/buildsteps/androidx86/run-tests
    printf $CURS_UP
    log_success_msg
  }
  else
    log_skip_msg;fi
}
else
{
  CONFIGURE=1

  if [ -f ./tools/depends/target/binary-addons/i686-linux-android-$ANDROID_SEL_TARGET/Makefile ];then
  {
    grep -q $ADDON_BUILD ./tools/depends/target/binary-addons/i686-linux-android-$ANDROID_SEL_TARGET/Makefile
    [[ $? = 0 ]] && CONFIGURE=0
  } fi

  if [[ $CONFIGURE = 1 ]];then
  {
    rm -rf ./tools/depends/target/binary-addons/i686-linux-android-$ANDROID_SEL_TARGET/build/depends/include/GL
    make -C ./tools/depends/target/binary-addons PREFIX=$XBMC_DEPENDS_ROOT/i686-linux-android-$ANDROID_SEL_TARGET ADDONS="$ADDON_BUILD"
  }
  else
  {
    make -C ./tools/depends/target/binary-addons/i686-linux-android-$ANDROID_SEL_TARGET PREFIX=$XBMC_DEPENDS_ROOT/i686-linux-android-$ANDROID_SEL_TARGET $ADDON_BUILD
  } fi
} fi

trap '' ERR

for i in `ls -1 $HOME/.android/avd/*.avd -d`;do
{
  touch $i/need_kodi_update_x86;
} done

printf "\n \
${BRIGHT}${WHITE}All steps successfully performed and test build present on:${NORMAL}
 - ${BRIGHT}${BLUE}${UNDERLINE}${BASE_PATH}`ls -1 -t $BASE_PATH/build/kodi-$GIT_USER/kodi-android-x86_32/*.apk | head -1`${NORMAL}\n"

rm -f $TEMP_DIR/kodi-android-x86.failed;
[ ! -z $OWN_TEMP ] && [[ ! -z $TEMP_DIR ]] && rm -rf $TEMP_DIR;
exit 0
