#!/bin/bash -e
###############################################################################
#                                                                             #
#     Copyright (C) 2015 Team KODI                                            #
#     http://kodi.tv                                                          #
#                                                                             #
#  This program is free software: you can redistribute it and/or modify       #
#  it under the terms of the GNU General Public License as published by       #
#  the Free Software Foundation, either version 3 of the License, or          #
#  (at your option) any later version.                                        #
#                                                                             #
#  This program is distributed in the hope that it will be useful,            #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of             #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              #
#  GNU General Public License for more details.                               #
#                                                                             #
#  You should have received a copy of the GNU General Public License          #
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.      #
#                                                                             #
###############################################################################
#                                                                             #
# Note: This script becomes called over cygwin on windows system!             #
#       Access from muple to them is over a ssh connection.                   #
#                                                                             #
###############################################################################

BASE_PATH="//10.0.2.4/qemu/build"
MUPEL_PATH=c:\\mupel

. "//10.0.2.4/qemu/home/.mupel/mupel.conf";
. "$BASE_PATH/tools/tool_functions";

DEBUG_BUILD="--enable-debug=no"
BUILD_SYSTEM="win32"
TEMP_DIR=
INSTALL_DIR_TYPE="Release"

##
# Usage help function return as string the available values
function usage()
{
  echo "Usage: $0 [--options]"
  echo "Options:"
  echo "--debug           build debug version"
  echo "--addon <name>    start a build of given add-on directly, usable during"
  echo "                  programming time"
  echo "--build-direct    if inserted kodi becomes direct build without perform of pre"
  echo "                  steps, becomes possible after one time the complete build"
  echo "                  was done. Usable during programming to reduce time"
  echo "--help            this help message"
  echo "Note:"
  echo "  This scripts are normally called from GUI interface, but also possible to use"
  echo "  direct with the right options set."
  exit 1
}
##

##
# Function to process given input variables
function process_opts()
{
  while test "$1" != "" ; do
    case "$1" in
      --build-direct)
        DIRECT_KODI_BUILD=1
        ;;
      --debug)
        DEBUG_BUILD="--enable-debug=yes"
        INSTALL_DIR_TYPE="Debug"
        ;;
      --addon)
        case "$2" in
            "")
              echo "Option '--addon', no argument"
              shift
              ;;
            *)
              ADDON_BUILD="$2"
              shift
              ;;
        esac ;;
      --help)
        usage
        ;;
      *)
        echo "invalid command-line option: $OPTARG"
        usage
        ;;
    esac
    shift
  done
}
##

###############################################################################
# Start of main process

process_opts "$@";

initBuildScript_Kodi;

KODI_SOURCE_CYG_PATH=/cygdrive/c/mupel/kodi-$GIT_USER

set -e;
trap '[[ ! -z $OWN_TEMP ]] && [[ ! -z $TEMP_DIR ]] && rm -rf $TEMP_DIR; trapError ${LINENO};' ERR;

touch $TEMP_DIR/kodi-windows-x86_32.failed;

. "$BASE_PATH/versions";

# Load or update kodi
loadKodiBuildDir $BUILD_SYSTEM "Windows x86-32bit" "c:\\mupel\\kodi-$GIT_USER\\";

export Configuration=$INSTALL_DIR_TYPE;
export TARBALLS=$BASE_PATH/build/kodi-tarballs;
export BUILDTHREADS=$CPU_PROC_JOBS;
export XBMC_PLATFORM_DIR="win32";
export WORKSPACE="c:\\mupel\\kodi-$GIT_USER\\kodi-$BUILD_SYSTEM";
export XBMC_DEPENDS_ROOT=$BASE_PATH/build/kodi-$GIT_USER/binary_distrib/$INSTALL_DIR_TYPE/kodi;

if [ ! -z $ADDON_BUILD ];then
  KODI_BUILD="$ADDON_BUILD add-on only";
elif [ -z $DIRECT_KODI_BUILD ];then
  KODI_BUILD="complete";
else
  KODI_BUILD="direct";fi

printf "
/------------------------------------------------------------------------------
|
|  Kodi build Windows x86 32bit
| ============================
|
|  Build type :        $KODI_BUILD
|  Build add-ons :     $([[ $INCLUDE_KODI_ADDONS = "TRUE" ]] && echo "yes" || echo "no")
|  Test run :          $([[ $KODI_RUN_TESTS = "TRUE" ]] && echo "yes" || echo "no")
|  Configuration :     $Configuration
|
|  TARBALLS :          $TARBALLS
|  BUILDTHREADS :      $BUILDTHREADS
|  XBMC_PLATFORM_DIR : $XBMC_PLATFORM_DIR
|  XBMC_DEPENDS_ROOT : $XBMC_DEPENDS_ROOT
|  WORKSPACE :         $WORKSPACE
|
\\-------------------------------------------------------------------------------
"

mkdir -p $MUPEL_PATH

chmod 777 -R $KODI_SOURCE_CYG_PATH/kodi-win32

cd $KODI_SOURCE_CYG_PATH/kodi-win32

# clean the BUILD_WIN32 at first to avoid problems with possible git files in there
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/Win32BuildSetup/BUILD_WIN32 ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/Win32BuildSetup/BUILD_WIN32;fi

# we assume git in path as this is a requirement
# git clean the untracked files and directories
# but keep the downloaded dependencies
echo running git clean -xfd -e "project/BuildDependencies/downloads" -e "project/BuildDependencies/downloads2"
git clean -xfd -e "project/BuildDependencies/downloads" -e "project/BuildDependencies/downloads2"

# cleaning additional directories
echo delete build directories
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/Win32BuildSetup/dependencies ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/Win32BuildSetup/dependencies;fi

if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/include ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/include;fi
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/lib ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/lib;fi
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/msys ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies/msys;fi

if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/XBMC ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/XBMC;fi
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/objs ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/objs;fi
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/libs ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/project/VS2010Express/libs;fi

# fetch submodules
if [ -d $KODI_SOURCE_CYG_PATH/kodi-win32/addons/skin.re-touched ];then
  rm -r $KODI_SOURCE_CYG_PATH/kodi-win32/addons/skin.re-touched;fi
git submodule update --init "./addons/skin.re-touched"

cd $KODI_SOURCE_CYG_PATH/kodi-win32/project/BuildDependencies
./DownloadBuildDeps.bat
./DownloadMingwBuildEnv.bat

cd $KODI_SOURCE_CYG_PATH/kodi-win32/project/Win32BuildSetup
./BuildSetup.bat noprompt noclean sh

trap '' ERR

printf "\n \
${BRIGHT}${WHITE}All steps successfully performed and test build present on:${NORMAL}
 - ${BRIGHT}${BLUE}${UNDERLINE}${BASE_PATH}/build/kodi-${BUILD_SYSTEM}/project/Win32BuildSetup/BUILD_WIN32/application${NORMAL}\n"

 rm -f $TEMP_DIR/kodi-windows-x86_32.failed;
[ ! -z $OWN_TEMP ] && [[ ! -z $TEMP_DIR ]] && rm -rf $TEMP_DIR;
exit 0
